# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: pytest and pupcheck

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: saltcorn_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - run: npm install -g eslint
      - run: eslint .
      - run: psql -d saltcorn_test --command='create extension "uuid-ossp";'
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGDATABASE: saltcorn_test
          PGPASSWORD: postgres
      - run: npm install --legacy-peer-deps
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          SKIP_DOCKER_IMAGE_INSTALL: "true"
      - run: npm run tsc
      - run: pip3 install requests pytest pyotp python-socketio[client]
      - run: echo '127.0.0.1 example.com sub.example.com sub1.example.com sub2.example.com sub3.example.com sub4.example.com sub5.example.com' | sudo tee -a /etc/hosts
      - run: echo '127.0.0.1 otherexample.com' | sudo tee -a /etc/hosts
      - run: pytest
        env:
          CI: true
          SALTCORN_MULTI_TENANT: true
          SALTCORN_SESSION_SECRET: "rehjtyjrtjr"
          SALTCORN_JWT_SECRET: "2f75ade09981d68f366a4e577025440d10b735cc270fc2092077140f98a41dab331589c79364601150816d9a3c6f34abf881019e2097e21a24963c56b9135bbb"
          PGHOST: localhost
          PGUSER: postgres
          PGDATABASE: saltcorn_test
          PGPASSWORD: postgres
      - run: deploy/pupchecks/run.sh
        env:
          CI: true
          SALTCORN_MULTI_TENANT: true
          SALTCORN_SESSION_SECRET: "rehjtyjrtjr"
          SALTCORN_JWT_SECRET: "2f75ade09981d68f366a4e577025440d10b735cc270fc2092077140f98a41dab331589c79364601150816d9a3c6f34abf881019e2097e21a24963c56b9135bbb"
          PGHOST: localhost
          PGUSER: postgres
          PGDATABASE: saltcorn_test
          PGPASSWORD: postgres
