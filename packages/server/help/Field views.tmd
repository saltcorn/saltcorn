{{# const srcTable = Table.findOne({ name: query.tableName }) }}
{{# const mode = query.mode }}
{{# const field = srcTable.getField(query.fieldName) }}
{{# const allFVs = Object.entries(field.type.fieldviews) }}
{{# const myFVs = mode==='filter' ? allFVs.filter(([nm,fv])=>fv.isFilter || fv.isEdit) : mode==='edit' ? allFVs.filter(([nm,fv])=>!fv.isFilter || fv.isEdit) : mode==='show'||mode==='list' ? allFVs.filter(([nm,fv])=>!fv.isFilter || !fv.isEdit) : allFVs }}


Field views are...
```
{{JSON.stringify(field.type.fieldviews, null, 2)}}
```

The available...

{{# for (const [name, fv] of myFVs) { }}
* {{name}}{{mode==='edit' && !fv.isEdit? ` [Not editable]`:''}}: {{fv.description||undefined}}


{{# } }}